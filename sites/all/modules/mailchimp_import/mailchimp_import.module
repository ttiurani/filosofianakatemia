<?php
// $Id$

/**
 * @file
 * MailChimp Import module.
 * This module connects to a MailChimp account (as configured in the local settings
 * for MailChimp module), imports campaigns, and stores them as nodes.
 *
 * The import can be configured to happen on every cron run.  Campaigns can also be
 * imported on demand.
 *
 * This module provides the following config settings:
 * - node type to store the newsletters as
 * - lists to import
 * - input format
 * - campaign statuses to import
 * - HTML cleanup settings
 *
 * We intend to add the following options in future versions of this module:
 * - node title format
 * - taxo terms to apply
 * - CCK field mapping
 * - how often to automatically check for campaigns to import
 * - ability to set this up as a Feeds feed
 */


/**
 * Implementation of hook_menu().
 */
function mailchimp_import_menu() {
  $items = array();
  $items['admin/config/services/mailchimp/import'] = array(
    'title' => t('Import'),
    'description' => t('Manage MailChimp Import settings.'),
    'page arguments' => array('mailchimp_import_admin_settings'),
    'access arguments' => array('administer mailchimp'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'mailchimp_import.inc',
  );
  return $items;
}

/**
 * Implementation of hook_cron().
 *
 * Runs the import function whenever cron runs, if configured to do so on the settings page.
 */
function mailchimp_import_cron() {
  if (variable_get('mailchimp_import_cron', FALSE)) {
    require_once(dirname(__FILE__) . '/mailchimp_import.inc');
    mailchimp_import_get_campaigns();
  }
}

/**
 * Implementation of hook_node_delete().
 *
 * Deletes from the mailchimp_import table on deletion of the imported node.
 * This means that when an imported newsletter node is deleted, it will be
 * re-imported as a new node next time the import runs.
 */
function mailchimp_import_node_delete($node) {
  // Delete the record corresponding to this node from the mailchimp_import table.
  db_query('DELETE FROM {mailchimp_import} WHERE nid = :nid', array(':nid' => $node->nid));
}
