<?php
/**
* @file
* A menu_block module extension which hides all parent level inactive menu items.
*/

/**
* Implements hook_help.
*
* Displays help and module information.
*
* @param path
*   Which path of the site we're using to display help
* @param arg
*   Array that holds the current path as returned from arg() function
*/
function menu_block_hide_help($path, $arg) {
  switch ($path) {
    case "admin/help#menu_block_hide":
      return '<p>'.  t("Hides inactive parent level items on the menu_block module") .'</p>';
      break;
  }
}

/**
 * Alter the menu tree and its configuration before the tree is rendered.
 *
 * @param $tree
 *   An array containing the unrendered menu tree.
 * @param $config
 *   An array containing the configuration of the tree.
 */
function menu_block_hide_menu_block_tree_alter(&$tree, $config) {
	
	// First go through the entire tree to find out if something should be hidden
	// i.e. if some child node is active
	$foundActiveChild = FALSE;
	foreach ($tree as $parentnode){
		if ($parentnode['link']['in_active_trail'] &&
			$parentnode['below'] != NULL){
			// Found children for active item, now check if they are in turn active
			foreach ($parentnode['below'] as $childnode){
				if ($childnode['link']['in_active_trail']){
					// Child is in active trail, all parents need to be
					// hidden except the one in the trail!
					$foundActiveChild = TRUE;
					_hide_inactive_items($tree);
					break;
				}
			}
			if ($foundActiveChild){
				// Call this method recursively again to hide all inactive children
				// if grandchildren are active
				menu_block_hide_menu_block_tree_alter($parentnode['below'], $config);
				break;
			}
		}
 	}
}

/**
 * Hides inactive parents
 */
function _hide_inactive_items(&$tree){
	// Go through the tree and hide everything except the tree
	foreach ($tree as &$treenode){
		if (!$treenode['link']['in_active_trail']){
		  $treenode['link']['hidden'] = TRUE;
		}
	}
	unset($treenode);
}
