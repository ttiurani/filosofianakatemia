<?php
/**
* @file
* A course database module for Filosofian Akatemia.
*/

/**
* Implements hook_help.
*
* Displays help and module information.
*
* @param path
*   Which path of the site we're using to display help
* @param arg
*   Array that holds the current path as returned from arg() function
*/
function fa_course_help($path, $arg) {
  switch ($path) {
    case "admin/help#fa":
      return '<p>'.  t("Filosofian Akatemia course database module.") .'</p>';
      break;
  }
}

/**
 * Implements hook_block_info().
 */
function fa_course_block_info() {
  $blocks['fa-course'] = array(
      'info' => t('Filosofian Akatemia Course Database'), //The name that will appear in the block list.
      'cache' => DRUPAL_CACHE_PER_ROLE, //Default
  );
  return $blocks;
}

/**
* Implements hook_block_view().
*
* Prepares the contents of the block.
*/
function fa_course_block_view($delta = '') {
  $block = array();
  switch($delta){
    case 'fa-course':
      $block['content'] = '<div id="fa-course">'
                        .  '</div>';
      break;
  }
  return $block;
}

/**
 * Implements invite_accept() from Invite module.
 * Creates links between invites and course participants.
 */
function fa_course_invite_accept($invite, $account) {
  if ($_SESSION[INVITE_SESSION_STATUS] == INVITE_REUSABLE && $is_new == TRUE){
    // Reusable invite, first search for the distributor of the course invite
    $distributor = db_select('fa_course_participant', 'cp')
                  ->fields('cp')
                  ->condition('iid', $invite->iid)
                  ->isNotNull('invite_reuse')
                  ->execute()
                  ->fetchObject();
    if ($distributor){
      if (empty($distributor->uid)){
        // This should happen only once
        $distributor->uid = $invite->invitee;
        drupal_write_record('fa_course_participant', $distributor, 'facpid');
      }
      // Create a new participant
      db_query("INSERT INTO {fa_course_participant}(facid, email, iid, uid) VALUES(:facid, :email, :iid, :uid)",
          array(':facid' => $participant->facid,
                ':email' => $invite->email,
                ':iid' => $invite->iid,
                ':uid' => $invite->invitee));
    }else{
      // Error, do what?
    }
  }else{
    db_query("UPDATE {fa_course_participant} SET uid = :uid WHERE iid = :iid",
        array(':facid' => $facid,
            ':iid' => $invite->iid,
            ':uid' => $invite->invitee));
  }
}
